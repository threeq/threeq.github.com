<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Threeq - 出井的青蛙</title>
    <link>https://blog.threeq.me/tags/python/</link>
    <description>Recent content in Python on Threeq - 出井的青蛙</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 05 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.threeq.me/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python学习 04：python 字符串类型</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/04-string/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/04-string/</guid>
      <description>&lt;p&gt;字符串是 Python 中最常用的数据类型。我们可以使用引号(&amp;lsquo;或&amp;rdquo;)来创建字符串。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;字符串字面量&lt;/li&gt;
&lt;li&gt;字符串操作&lt;/li&gt;
&lt;li&gt;字符串格式化&lt;/li&gt;
&lt;li&gt;字符串转换&lt;/li&gt;
&lt;li&gt;模式匹配（正则表达式）介绍&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python学习 03：python 数值类型</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/03-number/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/03-number/</guid>
      <description>&lt;p&gt;每种语言都会有其内置的基本数据类型，我们在学一门语言时，首先需要掌握其基本数据类型，学习 python 也不例外。python 的基本类型类型介绍在前一篇已经做过介绍了，这篇详细介绍其中的 &lt;strong&gt;数值类型&lt;/strong&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;python 变量&lt;/li&gt;
&lt;li&gt;几种数值类型：整数、浮点数、小数、分数、集合&lt;/li&gt;
&lt;li&gt;数值运算符&lt;/li&gt;
&lt;li&gt;数值工具模块&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;建议：在编程初期阶段完全是一个技术活，只要孰能生巧就行，所以在开始学习一门编程语言时一定要动手实践和操作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python学习 02：python 基础语法初识</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/02-basic-grammer/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/02-basic-grammer/</guid>
      <description>&lt;p&gt;由于我们使用的 Jupyter web 交互式环境，所以对于 python 原始的交互式环境和如何在物理机器上运行 python 程序将放到后面介绍。直接进入 python 语法的学习。首先先简单了解 Python 的基础语法。&lt;/p&gt;

&lt;h1 id=&#34;python-高层概念&#34;&gt;python 高层概念&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;程序由模块组成&lt;/li&gt;
&lt;li&gt;模块包含语句&lt;/li&gt;
&lt;li&gt;语句包含表达式&lt;/li&gt;
&lt;li&gt;表达式创建和操作对象&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python学习 01：学习环境搭建</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/01_learn_env_install/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/01_learn_env_install/</guid>
      <description>&lt;p&gt;python 是一门使用很广的动态语言，不论是在系统运维、web开发、科学计算、机器学习、图像处理等领域都有 python 的身影。当然这些都不能作为你要学习 python 的理由，学习他的唯一理由就是：你热爱 python。他不是最快的语言，也不是使用最多的语言，但是 python 可以提高你日常处理琐事的效率，并且顺带可以干一些很酷的事情：人生苦短，我用 pytho。&lt;/p&gt;

&lt;p&gt;此系列文章主要聚焦在两方面的内容；&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;第一部分：python 基础支持&lt;/p&gt;

&lt;p&gt;第二部分：python 应用实践&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;由于第一部分我们聚焦在 python 的基础知识的学习上，主要是让大家的属性 python 语法知识上，且能方便记录学习的过程，所以搭建环境我选择最简单的方式。
对于后面在项目实践的时候，会搭建适合项目开发的 python 开发环境。&lt;/p&gt;

&lt;p&gt;这里使用 docker 方式搭建我们的学习环境，我们选择 &lt;code&gt;jupyter/base-notebook&lt;/code&gt; 镜像，它同时兼顾了学习练习和笔记记录的功能，并且可以将学习比价导出，对于我们前期学习 python3 基础知识是最合适的方式，这里对于容器的管理我们使用 &lt;code&gt;docker-compose&lt;/code&gt;，对于后面有更多需求的时候，也可以很方便的进行扩展或替换成其他版本。当然你也可以选择你喜欢的 docker 镜像版本：&lt;a href=&#34;https://hub.docker.com/u/jupyter/&#34;&gt;jupyter/docker-stack&lt;/a&gt;。这系列文章也是使用一个在线的类似 Jupyter 工具 &lt;a href=&#34;https://colab.research.google.com/&#34;&gt;Colaboratory&lt;/a&gt; 写的（后面会介绍）。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>