<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Threeq - 出井的青蛙</title>
    <link>https://blog.threeq.me/post/</link>
    <description>Recent content in Posts on Threeq - 出井的青蛙</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 14 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.threeq.me/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python学习 09：异常处理</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/09-exception/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/09-exception/</guid>
      <description>&lt;p&gt;这次学习 python 中函数的基础知识&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;标准异常&lt;/li&gt;
&lt;li&gt;异常不做&lt;/li&gt;
&lt;li&gt;手动抛出异常&lt;/li&gt;
&lt;li&gt;自定义异常&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python学习 08：面向对象编程</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/08-class/</link>
      <pubDate>Thu, 13 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/08-class/</guid>
      <description>&lt;p&gt;这次学习 python 中函数的基础知识&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;类&lt;/li&gt;
&lt;li&gt;方法和属性&lt;/li&gt;
&lt;li&gt;继承和多重继承&lt;/li&gt;
&lt;li&gt;运算符重载&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python学习 07：函数</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/07-function-lambda/</link>
      <pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/07-function-lambda/</guid>
      <description>&lt;p&gt;这次学习 python 中函数的基础知识&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;函数定义&lt;/li&gt;
&lt;li&gt;函数参数&lt;/li&gt;
&lt;li&gt;匿名函数&lt;/li&gt;
&lt;li&gt;生产函数&lt;/li&gt;
&lt;li&gt;变量作用域
等&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python学习 06：python 基础语句：if/for/while</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/06-basic-statement/</link>
      <pubDate>Thu, 19 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/06-basic-statement/</guid>
      <description>&lt;p&gt;前面学习了 python 中的基础数据类型，现在开始学习 python 中和程序结构相关的内容，首先从基础语句开始&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;语句简单分类&lt;/li&gt;
&lt;li&gt;if 语句&lt;/li&gt;
&lt;li&gt;for 语句&lt;/li&gt;
&lt;li&gt;while 语句&lt;/li&gt;
&lt;li&gt;解析式语句&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python学习 05：python 列表、元组、字典</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/05-list-dict/</link>
      <pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/05-list-dict/</guid>
      <description>&lt;p&gt;列表、元组、字典均是 Python 中基础数据类型。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;列表操作&lt;/li&gt;
&lt;li&gt;元组操作&lt;/li&gt;
&lt;li&gt;字典操作&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python学习 04：python 字符串类型</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/04-string/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/04-string/</guid>
      <description>&lt;p&gt;字符串是 Python 中最常用的数据类型。我们可以使用引号(&amp;lsquo;或&amp;rdquo;)来创建字符串。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;字符串字面量&lt;/li&gt;
&lt;li&gt;字符串操作&lt;/li&gt;
&lt;li&gt;字符串格式化&lt;/li&gt;
&lt;li&gt;字符串转换&lt;/li&gt;
&lt;li&gt;模式匹配（正则表达式）介绍&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python学习 03：python 数值类型</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/03-number/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/03-number/</guid>
      <description>&lt;p&gt;每种语言都会有其内置的基本数据类型，我们在学一门语言时，首先需要掌握其基本数据类型，学习 python 也不例外。python 的基本类型类型介绍在前一篇已经做过介绍了，这篇详细介绍其中的 &lt;strong&gt;数值类型&lt;/strong&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;python 变量&lt;/li&gt;
&lt;li&gt;几种数值类型：整数、浮点数、小数、分数、集合&lt;/li&gt;
&lt;li&gt;数值运算符&lt;/li&gt;
&lt;li&gt;数值工具模块&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;建议：在编程初期阶段完全是一个技术活，只要孰能生巧就行，所以在开始学习一门编程语言时一定要动手实践和操作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python学习 02：python 基础语法初识</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/02-basic-grammer/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/02-basic-grammer/</guid>
      <description>&lt;p&gt;由于我们使用的 Jupyter web 交互式环境，所以对于 python 原始的交互式环境和如何在物理机器上运行 python 程序将放到后面介绍。直接进入 python 语法的学习。首先先简单了解 Python 的基础语法。&lt;/p&gt;

&lt;h1 id=&#34;python-高层概念&#34;&gt;python 高层概念&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;程序由模块组成&lt;/li&gt;
&lt;li&gt;模块包含语句&lt;/li&gt;
&lt;li&gt;语句包含表达式&lt;/li&gt;
&lt;li&gt;表达式创建和操作对象&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python学习 01：学习环境搭建</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-python/01_learn_env_install/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-python/01_learn_env_install/</guid>
      <description>&lt;p&gt;python 是一门使用很广的动态语言，不论是在系统运维、web开发、科学计算、机器学习、图像处理等领域都有 python 的身影。当然这些都不能作为你要学习 python 的理由，学习他的唯一理由就是：你热爱 python。他不是最快的语言，也不是使用最多的语言，但是 python 可以提高你日常处理琐事的效率，并且顺带可以干一些很酷的事情：人生苦短，我用 pytho。&lt;/p&gt;

&lt;p&gt;此系列文章主要聚焦在两方面的内容；&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;第一部分：python 基础支持&lt;/p&gt;

&lt;p&gt;第二部分：python 应用实践&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;由于第一部分我们聚焦在 python 的基础知识的学习上，主要是让大家的属性 python 语法知识上，且能方便记录学习的过程，所以搭建环境我选择最简单的方式。
对于后面在项目实践的时候，会搭建适合项目开发的 python 开发环境。&lt;/p&gt;

&lt;p&gt;这里使用 docker 方式搭建我们的学习环境，我们选择 &lt;code&gt;jupyter/base-notebook&lt;/code&gt; 镜像，它同时兼顾了学习练习和笔记记录的功能，并且可以将学习比价导出，对于我们前期学习 python3 基础知识是最合适的方式，这里对于容器的管理我们使用 &lt;code&gt;docker-compose&lt;/code&gt;，对于后面有更多需求的时候，也可以很方便的进行扩展或替换成其他版本。当然你也可以选择你喜欢的 docker 镜像版本：&lt;a href=&#34;https://hub.docker.com/u/jupyter/&#34;&gt;jupyter/docker-stack&lt;/a&gt;。这系列文章也是使用一个在线的类似 Jupyter 工具 &lt;a href=&#34;https://colab.research.google.com/&#34;&gt;Colaboratory&lt;/a&gt; 写的（后面会介绍）。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小白学 SQL 第十二天：存储过程和函数</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-sql/12-procedure-function/</link>
      <pubDate>Wed, 06 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-sql/12-procedure-function/</guid>
      <description>&lt;p&gt;之前我们已经学习了 SQL 的很多基础知识，最后一起看一下 &lt;strong&gt;存储过程和函数&lt;/strong&gt; ，这也是此系列的最后一篇。数据库系统有了存储过程和函数，才真正具备了编程的能力。&lt;/p&gt;

&lt;p&gt;知识要点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;存储过程&lt;/li&gt;
&lt;li&gt;存储过程和函数的区别&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小白学 SQL 第十一天：索引和视图</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-sql/11-view-index/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-sql/11-view-index/</guid>
      <description>&lt;p&gt;已经介绍了 SQL 的查询、定义、插入、修改、删除等操作，接下来将介绍数据库另一个重要的知识点：&lt;strong&gt;索引&lt;/strong&gt;，特别是在查询优化的时候，&lt;strong&gt;索引&lt;/strong&gt; 将是优化的最重要手段之一。查询本身会随着我们的应用功能的增强，不断的增加复杂度，这时就需要管理复杂查询的手段：&lt;em&gt;视图&lt;/em&gt; 。&lt;/p&gt;

&lt;p&gt;知识要点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;索引&lt;/li&gt;
&lt;li&gt;MySQL 索引操作语句&lt;/li&gt;
&lt;li&gt;BTREE 和 HASH&lt;/li&gt;
&lt;li&gt;视图&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里的内容可能有点难，有一定使用经验可能会更容易理解。不过没有关系只要知道索引的基本概念和操作语句就行，大家真的在使用到时再来看或查询相关资料就可以了。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>前端分层架构实战（一）</title>
      <link>https://blog.threeq.me/post/web/web-frontend-arch-practice/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/web/web-frontend-arch-practice/</guid>
      <description>&lt;p&gt;整个《前端分层架构实战》分成两部分：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;前端分层架构实战（一）：分层架构问题分析和结构设计&lt;/li&gt;
&lt;li&gt;前端分层架构实战（二）：分层架构项目规划和工程实施&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本文是其中的第一篇。&lt;/p&gt;

&lt;p&gt;随着微服务兴起前后端分离架构的越来越流行，前端的负责的开发任务越来越重，功能复杂度和代码量也越来越高，在同一个项目投入的前端人力也是越来越多，这个时候需要我们使用更加高效的方式来组织我们的代码结构。目前前端有很多框架帮我们做了很多这方面的工作，比如目前比较流行的的三大框架：angular、vue、react。但是我们在实际使用的时候往往发现，使用他们的命令行工具生成了一个工程，可以进行开发了，但是真正应用到真实项目中的时候，往往有力不从心的感觉，特别是企业及的项目中，这是由于它们做的只是从技术层面上解决了代码组织方式，并没有给出结合业务时项目里的组织结构和组织方法。而这些正是软件架构所解决的问题，软件架构正在后端开发中大放异彩，那我们能不能也在前端开发中引入软件架构方法，来解决前端日益复杂的开发需求呢？答案是肯定的，下面简单说一下我自己在这里面的实践总结，由于个人能力有限，有不正确的地方欢迎大家指正。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小白学 SQL 第十天：事务和锁</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-sql/10-db-transaction-lock/</link>
      <pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-sql/10-db-transaction-lock/</guid>
      <description>&lt;p&gt;&lt;strong&gt;事务&lt;/strong&gt; 是 DBMS 中一个非常重要的基本概念，主要用于处理操作量大，复杂度高的数据，比如说，在人员管理系统中，你删除一个人员，你即需要删除人员的基本资料，也要删除和该人员相关的信息，如信箱，文章等等，这样，这些数据库操作语句就构成一个事务！当我们在启动一个事务时，这里就引出了锁概念，并且这 2 个者对于初学者容易搞混淆。虽然事务和锁的基本原理是一样的，但是不同 RDBMS 的实现是有差别的，这里还是以 MySQL 中的事务和锁来讲解和说明基本操作。&lt;/p&gt;

&lt;p&gt;知识要点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;事务基本概念&lt;/li&gt;
&lt;li&gt;MySQL 事务操作&lt;/li&gt;
&lt;li&gt;MySQL 锁&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小白学 SQL 第九天：数据插入、修改、删除</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-sql/9-insert-update-delete/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-sql/9-insert-update-delete/</guid>
      <description>&lt;p&gt;前面七天主要聚焦在数据查询，就是怎么从表里面取出我们想要的数据。但是这些数据是如何录入到数据库的？如果数据错误了需要修改或删除数据怎么操作？我们如何快速的生产测试数据？这些就是这次我们需要讨论的内容。&lt;/p&gt;

&lt;p&gt;知识要点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;插入数据&lt;/li&gt;
&lt;li&gt;修改数据&lt;/li&gt;
&lt;li&gt;删除数据&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小白学 SQL 第八天：表结构管理</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-sql/8-create-alert-table/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-sql/8-create-alert-table/</guid>
      <description>&lt;p&gt;前面七天全部聚焦在数据查询，就是怎么从表里面取出我们想要的数据。但是这些表是如何建立？建立的时候需要注意哪些信息？如果修改或删除表结构？。这次就一起来讨论表结构的基本管理操作。&lt;/p&gt;

&lt;p&gt;知识要点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;创建表&lt;/li&gt;
&lt;li&gt;修改表&lt;/li&gt;
&lt;li&gt;删除表&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo 集成 impress.js 实现 ppt 播放效果</title>
      <link>https://blog.threeq.me/post/ppt/integrate-impress/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/ppt/integrate-impress/</guid>
      <description>&lt;p&gt;这是一个 Hugo Even 主题集成 impress.js 实现幻灯片效果和集成过程的演示。&lt;/p&gt;

&lt;p&gt;支持功能&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;支持 markdown 语法&lt;/li&gt;
&lt;li&gt;支持 html 语法&lt;/li&gt;
&lt;li&gt;支持 css 动画&lt;/li&gt;
&lt;li&gt;支持自定义 js 交互逻辑&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;实现依赖工具&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;impress.js&lt;/li&gt;
&lt;li&gt;showdown.js&lt;/li&gt;
&lt;li&gt;mermaid.js&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小白学 SQL 第七天：多表查询</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-sql/7-query-multi-table/</link>
      <pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-sql/7-query-multi-table/</guid>
      <description>&lt;p&gt;之前学习的查询都只涉及到单表，但在实际应用中还有很大一部分需求，只靠单表查询是实现不了的，比如：查询一个班上的所有人；统计每个班的人数等。那这些需求或问题应该怎么分析和实现，这就是今天要讲解的多表查询。&lt;/p&gt;

&lt;p&gt;知识要点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;子查询&lt;/li&gt;
&lt;li&gt;表连接&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小白学 SQL 第六天：统计查询</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-sql/6-query-statistics/</link>
      <pubDate>Sun, 29 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-sql/6-query-statistics/</guid>
      <description>&lt;p&gt;今天我们来学习涉及单表查询的最后一种查询方式：统计查询，但让统计查询并不只能用于单表查询的，也可用于多表查询。其实我们前面所有的查询子句都可以用于单表和多表查询，具体多表查询中的使用将在第七天介绍。首先还是看看统计查询里面内容概要，也是今天的知识要点。&lt;/p&gt;

&lt;p&gt;知识要点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;统计函数&lt;/li&gt;
&lt;li&gt;分组统计&lt;/li&gt;
&lt;li&gt;过滤分组统计&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小白学 SQL 第五天：数据操作函数</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-sql/5-query-function/</link>
      <pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-sql/5-query-function/</guid>
      <description>&lt;p&gt;我们之前已经学习很多的 SQL 查询支持，但是这些查询只能原样返回数据库里存储的数据，那如果我们需要对这些数据做一个处理怎么办呢？比如：合并2个字段、返回的学生年龄2倍等。这就是今天要一起学习的内容：数据操作函数。每个 RDBMS 提供提供的函数操作都不一样，这里还是以 MySQL 为例子讲解，其他的 RDBMS 请查阅相关文档。由于数据处理函数比较多，这里没有办法全部覆盖，只会列举我们常用的一些操作函数，我把他们分成 5 类：字符串函数、数值函数、时间函数、统计函数、流程控制函数。想知道更多函数详情请参考 &lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/func-op-summary-ref.html&#34;&gt;MySQL 官方文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;知识要点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;计算字段、计算列、虚拟列&lt;/li&gt;
&lt;li&gt;常用字符串函数&lt;/li&gt;
&lt;li&gt;常用数值计算、数值函数&lt;/li&gt;
&lt;li&gt;常用日期时间函数&lt;/li&gt;
&lt;li&gt;流程控制函数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里列举的使平时常用的 4 中类型函数分类，另外的统计函数将在下次单独说明。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小白学 SQL 第四天：数据过滤查询</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-sql/4-query-where/</link>
      <pubDate>Tue, 24 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-sql/4-query-where/</guid>
      <description>&lt;p&gt;在第三天的时候学习了数据的基本查询结构，包括：查询指定列，返回指定大小结果集，数据排序，数据去重。今天将学习查询里面另外一个基础且重要的查询结构：过滤查询（也叫条件查询），可以说现今你能看到的所有涉及到 RDBMS 软件一定都有 &lt;em&gt;过滤查询&lt;/em&gt; 。所以今天的内容一定要掌握，也是一切用到 RDBMS 系统的所需掌握的基础知识之一。&lt;/p&gt;

&lt;p&gt;今天涉及到的知识要点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;where子句子结构&lt;/li&gt;
&lt;li&gt;数值、时间&lt;/li&gt;
&lt;li&gt;字符串匹配： like、百分号（%）通配符、下划线（_）通配符&lt;/li&gt;
&lt;li&gt;范围值检查：between 、in&lt;/li&gt;
&lt;li&gt;空值查询：is null、not&lt;/li&gt;
&lt;li&gt;组合查询：and、or、求值顺序&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小白学 SQL 第三天：单表数据查询</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-sql/3-query-data/</link>
      <pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-sql/3-query-data/</guid>
      <description>&lt;p&gt;《小白学 SQL》第三天&lt;/p&gt;

&lt;p&gt;数据查询应该是我们平时用得最多的数据库操作，所以我们优先学习数据查询，今天我们就来看看基础的数据查询操作：单表数据查询，涉及到的知识点有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;检索单个列&lt;/li&gt;
&lt;li&gt;检索多个列&lt;/li&gt;
&lt;li&gt;数据去重&lt;/li&gt;
&lt;li&gt;返回定量数据集&lt;/li&gt;
&lt;li&gt;排序检索数据&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小白学 SQL 第二天：数据表创建</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-sql/2-create-table/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-sql/2-create-table/</guid>
      <description>&lt;p&gt;《小白学 SQL》第二天&lt;/p&gt;

&lt;p&gt;今天我们来学习数据表（table）的建立，涉及到的内容可能大家还不能完全理解，这里主要是为后面的查询语句做些基本准备和数据准备，后面还会专门学习 DDL（数据学习语言），所以没有关系这里大家只要能执行得到正确结果就行。&lt;/p&gt;

&lt;p&gt;今天涉及到的内容有：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;表创建语句（create）&lt;/li&gt;
&lt;li&gt;数据插入语句（insert ）&lt;/li&gt;
&lt;li&gt;MySQL 基本数据类型&lt;/li&gt;
&lt;li&gt;E-R图（实体关系图）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Scrum &#43; 看板 开发实践：记录</title>
      <link>https://blog.threeq.me/post/team-communication/agile-practice-record/</link>
      <pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/team-communication/agile-practice-record/</guid>
      <description>&lt;p&gt;目前我们团队正实践 &lt;code&gt;Scrum 框架&lt;/code&gt; 和 &lt;code&gt;看板管理&lt;/code&gt;，这边文章正是对我们自己的实践的记录。这里的记录并不是按照时间顺序进行的，而是按照我自己的针对实践目标的先后进行的。目前我们团队还没有完全实现以上所有目标，对 &lt;code&gt;Scrum 框架&lt;/code&gt; 理解和使用也还在初级阶段，所以有很多不足的地方，并且还有很多地方还在聊胜于无的状态，欢迎大家指正。&lt;/p&gt;

&lt;p&gt;我们现在正在进行的实践有：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;统一团队对“完成”的定义&lt;/li&gt;
&lt;li&gt;看板管理流程&lt;/li&gt;
&lt;li&gt;每日晨会&lt;/li&gt;
&lt;li&gt;迭代回顾会议&lt;/li&gt;
&lt;li&gt;迭代计划会议&lt;/li&gt;
&lt;li&gt;code review&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;我们团队刚开始的时候管理、开发混乱完全没有章法，大家各种打架、各种撕逼、各种甩锅。没有哪一次迭代不通宵，没有哪一次迭代不延期，没有哪一次迭代质量过关，没有哪一次上线不出问题，这种状态持续了很长一段时间。我感觉不行了，再这样下去还能做个啥产品，开始寻找各种解决方案并且不断反思团队遇到问题的本质，后来学习了敏捷，接触到 Scrum 和 看板，里面的方法论和实践操作不正是我们团队需要的吗？于是坚决决定团队开始敏捷实践，当然正所谓：软件开发没有银弹，实践证明 Scrum 和 看板并不能解决我们团队所有问题，但是确实可以让团队慢慢变好。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo 网站增加搜索功能：Lunrjs 和 Algolia</title>
      <link>https://blog.threeq.me/post/notes/hugo-site-search/</link>
      <pubDate>Sun, 15 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/notes/hugo-site-search/</guid>
      <description>&lt;p&gt;本文是总结我自己在使用 Hugo 进行建站的时候给网站增加内容检索功能的结果。做这个功能的一个原因也是由于自己使用的 Even 主题没有带检索功能，所有只有自己上手撸一把。使用的检索方案包括 Lunrjs 和 Algolia，本文的处理方式可以同时支持 2 中方式，可以根据自己的情况自由选择或切换。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小白学 SQL 第一天：环境搭建</title>
      <link>https://blog.threeq.me/post/articles/noob-learn-sql/1-install-tools/</link>
      <pubDate>Sat, 14 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/articles/noob-learn-sql/1-install-tools/</guid>
      <description>&lt;p&gt;《小白学 SQL》第一天&lt;/p&gt;

&lt;p&gt;本篇文章是《小白学 SQL》系列的开篇，也是学习的第一天。这个系列的文章是之前的学习笔记整理，同时再加入我自己在使用使用的一些使用经验，属于比较初级的知识整理，适合小白用户（初学者和刚入门）。&lt;/p&gt;

&lt;p&gt;数据库管理系统（DBMS）是 IT 从业者必备工具之一，你能在市面上看到的任何一个软件系统，在后面支持的一定有它的身影。 而这里面关系型数据库管理系统（RDBMS） 目前暂居了绝大部分，操作 RDBMS 的基础就是今天我们要开始学习的 SQL（结构化查询语言），所以我们有必要针对 SQL 进行系统全面的学习。&lt;/p&gt;

&lt;p&gt;作为学习的第一天我们将从搭建环境开始，今天实践涉及到的工具有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/community-edition#/download&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.fosshub.com/ConEmu.html/ConEmuSetup.180318.exe&#34;&gt;ConEmuSetup&lt;/a&gt;（windows 版本命令行工具，Linux 和 Mac 不需要）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.navicat.com.cn/download/direct-download?product=navicat_premium_cs_x64.exe&amp;amp;location=1&#34;&gt;Navicat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mysql 查询优化：慢查询分析工具 pt-query-digest</title>
      <link>https://blog.threeq.me/post/db/mysql-slow-query-analyse/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/db/mysql-slow-query-analyse/</guid>
      <description>&lt;p&gt;在系统刚上线的时候，经常会出现慢 SQL 的情况，并且有时候系统会在特定的时间点变慢。这个时候的慢 SQL 查询语句往往是大量出现，MySQL 的慢查询日志文件也会比较大。这个时候我们往往需要从哪些查询最多、耗时最长的 sql 开始优化，以提升我们的处理效益。这个时候就需要我们能对慢日志进行统计分析，在上 M ，甚至 几十 M 的日志文件里面使用手工的方式明显是不可能的，这个时候就需要有专门的统计分析工具来帮我们做统计、分析哪些慢查询日志。&lt;code&gt;percona-toolkit&lt;/code&gt; 就是一个提供统计和分析的工具集，这里重点介绍里面的 &lt;code&gt;pt-query-digest&lt;/code&gt; 工具。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mysql 查询优化：索引优化</title>
      <link>https://blog.threeq.me/post/db/mysql-sql-index-analyse-tool/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/db/mysql-sql-index-analyse-tool/</guid>
      <description>&lt;p&gt;我们在产品中使用 MySQL 数据库的时候，肯定会用到索引的，或是在前期建立一些初始索引，或是在后期 SQL 优化的时候根据系统运行状态逐渐增加索引。不论是以什么方式建立的索引，他们都会影响我们对数据库做的操作，并且是对我们所有的数据操作都有影响，包括 增加、删除、修改、查询、统计 操作。这时如果线上有部分索引在系统升级已经失效了，我们怎么知道，怎么及时的排查和删除，需要我们持续的跟踪和分析。今天我就介绍几款针对线上数据库索引的分析工具。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pt-index-usage&lt;/li&gt;
&lt;li&gt;userstat&lt;/li&gt;
&lt;li&gt;check-unused-keys&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git 代码库分之管理</title>
      <link>https://blog.threeq.me/post/git-branch-flow/</link>
      <pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/git-branch-flow/</guid>
      <description>&lt;p&gt;代码版本库使用git管理，以下是git版本使用规范&lt;/p&gt;

&lt;h2 id=&#34;流程图说明&#34;&gt;流程图说明&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://blog.threeq.me/images/git-branch-flow-1.jpg&#34; alt=&#34;git流程&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>让网络更好为我们服务</title>
      <link>https://blog.threeq.me/post/%E4%B8%AA%E4%BA%BA%E7%AE%A1%E7%90%86/gtd-flow/</link>
      <pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/%E4%B8%AA%E4%BA%BA%E7%AE%A1%E7%90%86/gtd-flow/</guid>
      <description>&lt;p&gt;你每天早上一醒来有没有立即想拿起手机赶紧看一下（facebook、twitter、微信），无论里面有没有信息都要打开一下才安心？并且在上班之前还要想办法挤出时间看一下各大新闻网站，查收邮件在各种邮件信息中找出今天需要处理的事情。并且在工作的时候，一出现一个消息弹框马上点击进去看，害怕自己遗漏哪怕一次消息。&lt;/p&gt;

&lt;p&gt;这些在一个信息爆炸的时代是正常的，被称为信息饥渴。其实出现这个情况是由于我们没有很好获取信息方式和管理信息方法。这篇文章就介绍如何更好的利用网络工具来为我们管理信息。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>项目持续集成工具</title>
      <link>https://blog.threeq.me/post/ci-cd-tool/</link>
      <pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/ci-cd-tool/</guid>
      <description>每个项目管理中都有自己的管理工具集合，这里分享一下我用过的工具集合，这里面有些工具的实践时间可能并不是很长时间，列在这里意味这下一个阶段的实</description>
    </item>
    
    <item>
      <title>CSS3 新增选择器</title>
      <link>https://blog.threeq.me/post/web/css3-added-selector/</link>
      <pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.threeq.me/post/web/css3-added-selector/</guid>
      <description>&lt;p&gt;现代前端开发中css3已经是不可其他的一部分，早已成为每个web开发人员必备技能之一。
而选择器又是css中最基础、最重要的知识点，对于我们页面结构和代码接口都有着举足轻重的作用。
今天我们就来看看css3所支持的和新增的选择器。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>